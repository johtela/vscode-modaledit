{
	"name": "vscode-modaledit",
	"displayName": "ModalEdit",
	"description": "Configurable modal editing engine with built-in Vim keymaps",
	"version": "2.1.0",
	"publisher": "johtela",
	"engines": {
		"vscode": "^1.89.0"
	},
	"repository": {
		"url": "https://github.com/johtela/vscode-modaledit"
	},
	"license": "MPL-2.0",
	"categories": [
		"Keymaps",
		"Other"
	],
	"homepage": "https://johtela.github.io/vscode-modaledit",
	"activationEvents": [
		"onStartupFinished"
	],
	"icon": "images/normal.jpg",
	"main": "./dist/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "ModalEdit",
			"properties": {
				"modaledit.keybindings": {
					"type": "object",
					"description": "Keybindings map key â†’ VS Code commands",
					"default": {},
					"patternProperties": {
						"^.([\\-,].)*$": {
							"anyOf": [
								{
									"type": "string",
									"description": "VS Code command"
								},
								{
									"type": "array",
									"description": "Sequence of commands",
									"items": {
										"anyOf": [
											{
												"type": "object",
												"description": "Action"
											},
											{
												"type": "string",
												"description": "VS Code command"
											}
										]
									}
								},
								{
									"type": "object",
									"description": "VS Code command with arguments",
									"properties": {
										"command": {
											"type": "string",
											"description": "VS Code command"
										},
										"args": {
											"description": "Command arguments",
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											]
										}
									}
								},
								{
									"type": "object",
									"description": "Conditional command",
									"properties": {
										"condition": {
											"type": "string",
											"description": "JavaScript expression that is evaluated"
										}
									}
								},
								{
									"type": "number",
									"description": "Keymap id"
								}
							]
						}
					}
				},
				"modaledit.selectbindings": {
					"type": "object",
					"description": "Keybindings used when selection is active",
					"default": {},
					"patternProperties": {
						"^.([\\-,].)*$": {
							"anyOf": [
								{
									"type": "string",
									"description": "VS Code command"
								},
								{
									"type": "array",
									"description": "Sequence of commands",
									"items": {
										"anyOf": [
											{
												"type": "object",
												"description": "Action"
											},
											{
												"type": "string",
												"description": "VS Code command"
											}
										]
									}
								},
								{
									"type": "object",
									"description": "VS Code command with arguments",
									"properties": {
										"command": {
											"type": "string",
											"description": "VS Code command"
										},
										"args": {
											"description": "Command arguments",
											"anyOf": [
												{
													"type": "object"
												},
												{
													"type": "string"
												}
											]
										}
									}
								},
								{
									"type": "object",
									"description": "Conditional command",
									"properties": {
										"condition": {
											"type": "string",
											"description": "JavaScript expression that is evaluated"
										}
									}
								},
								{
									"type": "number",
									"description": "Keymap id"
								}
							]
						}
					}
				},
				"modaledit.insertCursorStyle": {
					"type": "string",
					"enum": [
						"block",
						"block-outline",
						"line",
						"line-thin",
						"underline",
						"underline-thin"
					],
					"default": "line",
					"description": "Shape of the cursor when in insert mode."
				},
				"modaledit.normalCursorStyle": {
					"type": "string",
					"enum": [
						"block",
						"block-outline",
						"line",
						"line-thin",
						"underline",
						"underline-thin"
					],
					"default": "block",
					"description": "Shape of the cursor when in normal mode."
				},
				"modaledit.searchCursorStyle": {
					"type": "string",
					"enum": [
						"block",
						"block-outline",
						"line",
						"line-thin",
						"underline",
						"underline-thin"
					],
					"default": "underline",
					"description": "Shape of the cursor when incremental search is active."
				},
				"modaledit.selectCursorStyle": {
					"type": "string",
					"enum": [
						"block",
						"block-outline",
						"line",
						"line-thin",
						"underline",
						"underline-thin"
					],
					"default": "line-thin",
					"description": "Shape of the cursor when selection is active in normal mode."
				},
				"modaledit.insertStatusText": {
					"type": "string",
					"default": "-- $(edit) INSERT --",
					"description": "Mode text (and icons) shown in status bar in insert mode."
				},
				"modaledit.insertStatusColor": {
					"type": "string",
					"description": "Color of the status bar mode text in insert mode (in HTML format)."
				},
				"modaledit.normalStatusText": {
					"type": "string",
					"default": "-- $(move) NORMAL --",
					"description": "Mode text (and icons) shown in status bar in normal mode."
				},
				"modaledit.normalStatusColor": {
					"type": "string",
					"description": "Color of the status bar mode text in normal mode (in HTML format)."
				},
				"modaledit.searchStatusText": {
					"type": "string",
					"default": "$(search) SEARCH",
					"description": "Mode text (and icons) shown in status bar in search mode."
				},
				"modaledit.searchStatusColor": {
					"type": "string",
					"description": "Color of the status bar mode text when in search mode (in HTML format)."
				},
				"modaledit.selectStatusText": {
					"type": "string",
					"default": "-- $(paintcan) VISUAL --",
					"description": "Mode text (and icons) shown in status bar selection is active in normal mode."
				},
				"modaledit.selectStatusColor": {
					"type": "string",
					"description": "Color of the status bar mode text when selection is active in normal mode (in HTML format)."
				},
				"modaledit.startInNormalMode": {
					"type": "boolean",
					"default": true,
					"description": "Is editor initially in normal mode?"
				}
			}
		},
		"commands": [
			{
				"command": "modaledit.toggle",
				"title": "ModalEdit: Toggle normal / insert mode"
			},
			{
				"command": "modaledit.enterNormal",
				"title": "ModalEdit: Normal mode"
			},
			{
				"command": "modaledit.enterInsert",
				"title": "ModalEdit: Insert mode"
			},
			{
				"command": "modaledit.defineBookmark",
				"title": "ModalEdit: Define bookmark"
			},
			{
				"command": "modaledit.goToBookmark",
				"title": "ModalEdit: Go to bookmark"
			},
			{
				"command": "modaledit.showBookmarks",
				"title": "ModalEdit: Show bookmarks"
			},
			{
				"command": "modaledit.cancelSearch",
				"title": "ModalEdit: Cancel search mode"
			},
			{
				"command": "modaledit.deleteCharFromSearch",
				"title": "ModalEdit: Delete the last search character"
			},
			{
				"command": "modaledit.importPresets",
				"title": "ModalEdit: Import preset keybindings"
			}
		],
		"keybindings": [
			{
				"key": "Escape",
				"command": "modaledit.enterNormal",
				"when": "editorTextFocus && !suggestWidgetMultipleSuggestions && !suggestWidgetVisible"
			},
			{
				"key": "Escape",
				"command": "modaledit.cancelSearch",
				"when": "editorTextFocus && modaledit.searching"
			},
			{
				"key": "Backspace",
				"command": "modaledit.deleteCharFromSearch",
				"when": "editorTextFocus && modaledit.searching"
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "webpack --mode production",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"deploy": "lits --deployMode prod",
		"lits-watch": "lits --serve",
		"postversion": "git push && git push --tags"
	},
	"devDependencies": {
		"@types/node": "^24.3.0",
		"@types/vscode": "^1.103.0",
		"litscript": "file:../litscript"
	}
}